version: 2.1  # is the latest CircleCI version

orbs:
  slack: circleci/slack@5.1.1

jobs:
  build_and_test: # this can be any name you choose
    docker:
      - image: cimg/node:18.20.2
    steps:
      - checkout # checkout source code
      - run:
          name: Instalar dependencias
          command: npm install

      - run:
          name: Ejecutar test
          command: |
            set +e
            npm test
            RESULT=$?
            set -e
            if [ $RESULT -eq 0 ]; then
              STATUS="✅ Tests pasaron correctamente"
            else
              STATUS="❌ Tests fallaron"
            fi
            curl -X POST -H 'Content-type: application/json' \
              --data "{\"text\":\"$STATUS en el proyecto *$CIRCLE_PROJECT_REPONAME* (branch: $CIRCLE_BRANCH)\"}" \
              $SLACK_WEBHOOK_URL
            exit $RESULT  # devolver el estado correcto a CircleCI
      
      - run:
          name: Mover tarjeta de Trello a "Completado"
          command: |
            COMMIT_MSG=$(git log -1 --pretty=%B)
            echo "Último commit: $COMMIT_MSG"

            # Buscar ID de tarjeta (ej: TRELLO-abc123)
            CARD_ID=$(echo "$COMMIT_MSG" | grep -oE 'TRELLO-[a-zA-Z0-9]+')

            if [ -n "$CARD_ID" ]; then
              echo "Encontrado ID de tarjeta: $CARD_ID"

              # **Paso 1: Realizar la llamada a la API de Trello**
              # Nota: -s para silencio, pero podríamos querer -f para fail-fast en errores HTTP,
              # aunque el manejo de JSON es mejor.
              CARD_JSON=$(curl -s \
                "https://api.trello.com/1/search?query=$CARD_ID&key=$TRELLO_API_KEY&token=$TRELLO_TOKEN&modelTypes=cards&cards_limit=1")

              # **Paso 2: Depurar la salida de CURL (MUY IMPORTANTE para identificar el problema)**
              echo "--- DEBUG: Contenido recibido de la API de Trello ---"
              echo "$CARD_JSON"
              echo "----------------------------------------------------"

              # **Paso 3: Validar que la salida de curl es JSON válido antes de pasarlo a jq**
              # `jq .` intenta parsear el JSON.
              # `> /dev/null 2>&1` redirige la salida y los errores para que no ensucien el log.
              # `if ! ...; then` ejecuta el bloque si el comando jq falla (indicando que no es JSON válido).
              if ! echo "$CARD_JSON" | jq . > /dev/null 2>&1; then
                echo "❌ ERROR: La respuesta de la API de Trello NO es un JSON válido."
                echo "Por favor, verifica:"
                echo "  1. Tus variables TRELLO_API_KEY y TRELLO_TOKEN (en los secretos de GitHub Actions)."
                echo "  2. Que el ID de tarjeta '$CARD_ID' realmente exista en Trello y sea accesible con tu token."
                echo "  3. Posibles límites de tasa de la API de Trello."
                exit 1 # Termina la acción con un error
              fi

              # **Paso 4: Extraer el ID de la tarjeta real si el JSON es válido**
              CARD_REAL_ID=$(echo "$CARD_JSON" | jq -r '.cards[0].id')

              # **Paso 5: Continuar con la lógica si se encontró un ID real**
              if [ "$CARD_REAL_ID" != "null" ]; then
                echo "Moviendo tarjeta Trello ID real: $CARD_REAL_ID (original: $CARD_ID) a lista Completado..."
                curl -X PUT "https://api.trello.com/1/cards/$CARD_REAL_ID" \
                  -d "idList=$TRELLO_DONE_LIST_ID" \
                  -d "key=$TRELLO_API_KEY" \
                  -d "token=$TRELLO_TOKEN"
                echo "✅ Tarjeta movida exitosamente (o intento de mover)."
              else
                echo "❌ No se pudo encontrar un ID de tarjeta válido en la respuesta JSON (CARD_REAL_ID es 'null')."
                echo "Esto puede ocurrir si la tarjeta '$CARD_ID' no existe, está archivada, o no se encontró en la búsqueda."
                # Opcional: Para más depuración aquí, podrías volver a imprimir $CARD_JSON
                # echo "Respuesta JSON completa que resultó en ID nulo:"
                # echo "$CARD_JSON"
                exit 1 # Termina la acción con un error si la tarjeta no se encontró
              fi
            else
              echo "⚠️ No se encontró ningún ID de tarjeta Trello (ej. TRELLO-abc123) en el mensaje del commit."
              echo "Este paso se saltará."
            fi

  deploy:
    docker:
      - image: cimg/node:24.1.0
    steps:
      - checkout
      - run:
          name: Install Vercel CLI
          command: sudo npm install --global vercel@latest
      - run:
          name: Desplegar a Vercel
          command: vercel --prod --token=$VERCEL_TOKEN

workflows:
  version: 2
  build_test:
    jobs:
      - build_and_test
      - deploy:
          requires: 
            - build_and_test
          filters:
            branches:
              only: /main/