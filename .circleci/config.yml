version: 2.1  # is the latest CircleCI version

orbs:
  python: circleci/python@3.1.0 # orb contains a set of prepackaged CircleCI configurations you can use to do common CircleCI tasks for the Python programming language.
  slack: circleci/slack@5.1.1

jobs:
  build_and_test: # this can be any name you choose
    executor: python/default # use the defaul executor defined within the orb
    steps:
      - checkout # checkout source code
      - python/install-packages:
          pkg-manager: pip
      - run:
          name: Run test
          command: |
            python -m pytest
            RESULT=$?
              if [ $RESULT -eq 0 ]; then
                STATUS="✅ Tests pasaron correctamente"
              else
                STATUS="❌ Tests fallaron"
              fi
              curl -X POST -H 'Content-type: application/json' \
                --data "{\"text\":\"$STATUS en el proyecto *$CIRCLE_PROJECT_REPONAME* (branch: $CIRCLE_BRANCH)\"}" \
                $SLACK_WEBHOOK_URL
              exit $RESULT  # devolver el estado correcto a CircleCI
      - persist_to_workspace:
          root: ~/project
          paths:
            - .

  deploy:
    docker:
      - image: cimg/python:3.9-node
    steps:
      - checkout

      - run:
          name: Instalar Firebase CLI
          command: npm install -g firebase-tools

      - run:
          name: Instalar dependencias Python
          command: |
            python -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt

      - run:
          name: Desplegar funciones a Firebase
          command: |
            firebase deploy --only functions --project entornoci --token $FIREBASE_TOKEN

workflows:
  version: 2
  build_test:
    jobs:
      - build_and_test
      - deploy:
          requires:
            - build_and_test